{
    "collab_server" : "",
    "contents" : "# ========================================================================================================================================\n# Description:   Lab Quiz 1\n#                Coursera Data Science at Duke University\n#\n#\n# Author:        Bruno Hunkeler\n# Date:          02.05.2016\n#\n# ========================================================================================================================================\n\n# ========================================================================================================================================\n# Load Libraries\n# ========================================================================================================================================\n\nlibrary('devtools')\nlibrary('curl')\nlibrary('ggplot2')\nlibrary('dplyr')\n# library('StatsRBHU')\n# install_github('StatsWithR/statsr')\nlibrary(statsr)\n\ntemp = FALSE\n\n# ==================================================================================================\n# Lab Quiz 2\n# ==================================================================================================\n\n\ndata(nycflights)\nnames(nycflights)\n\nif ( temp == TRUE) {\nggplot(data = nycflights, aes(x = log10(dep_delay))) +\n  geom_histogram()\n\nggplot(data = nycflights, aes(x = dep_delay)) +\n  geom_histogram()\n\nggplot(data = nycflights, aes(x = dep_delay)) +\n  geom_histogram(binwidth = 15)\n\nggplot(data = nycflights, aes(x = dep_delay)) +\n  geom_histogram(binwidth = 150)\n\nrdu_flights <- nycflights %>%\n  filter(dest == \"RDU\")\nggplot(data = rdu_flights, aes(x = dep_delay)) +\n  geom_histogram()\n\n\nrdu_flights %>%\n  summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())\n\nsfo_feb_flights <- nycflights %>%\n  filter(dest == \"SFO\", month == 2)\n\n\nrdu_flights %>%\n  group_by(origin) %>%\n  summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())\n\nnycflights %>%\n  group_by(month) %>%\n  summarise(mean_dd = mean(dep_delay)) %>%\n  arrange(desc(mean_dd))\n\nggplot(nycflights, aes(x = factor(month), y = log10(dep_delay))) +\n  geom_boxplot()\n\nggplot(data = nycflights, aes(x = origin, fill = dep_type)) +\n  geom_bar()\n\n}\n\n# ==================================================================================================\n# Question 1\n\nsfo_feb_flights <- nycflights %>%\n  filter(dest == \"SFO\", month == 2)\n\ndim(sfo_feb_flights)\n\n# Answer: 68\n\n\n# ==================================================================================================\n# Question 2\n\nsfo_feb_flights %>%\n  summarise(mean_dd = mean(arr_delay), sd_dd = sd(arr_delay), n = n())\n\nggplot(data = sfo_feb_flights, aes(x = arr_delay)) +\n  geom_histogram(binwidth = 10)\n\nsfo_arr_delay <- sfo_feb_flights %>%\n  filter(arr_delay > 120)\n\n# Answer: C\n\n# ==================================================================================================\n# Question 3\n\nsfo_feb_flights %>%\n  group_by(carrier) %>%\n  summarise(median_dd = median(arr_delay), iqr_dd =IQR(arr_delay), n = n())\n\n# Answer: D - Delta and United Airlines\n\n# ==================================================================================================\n# Question 4\n\n\nnycflights %>%\n  group_by(month) %>%\n  summarise(mean_dd = mean(dep_delay)) %>%\n  arrange(desc(mean_dd))\n\n# Answer: C - July\n\n# ==================================================================================================\n# Question 5\n\nnycflights %>%\n  group_by(month) %>%\n  summarise(median_dd = median(dep_delay)) %>%\n  arrange(desc(median_dd))\n\n# Answer: E - December\n\n# ==================================================================================================\n# Question 6\n\nggplot(nycflights, aes(x = factor(month), y = dep_delay)) +\n  geom_boxplot()\n\n# dont't know yet\n\n# Answer: A - Mean would be more reliable as it gives us the true average.\n\n\n# ==================================================================================================\n# Question 7\n\nnycflights <- nycflights %>%\n  mutate(dep_type = ifelse(dep_delay < 5, \"on time\", \"delayed\"))\n\nnycflights %>%\n  group_by(origin) %>%\n  summarise(ot_dep_rate = sum(dep_type == \"on time\") / n()) %>%\n  arrange(desc(ot_dep_rate))\n\n# Answer: C - LGA\n\n\n# ==================================================================================================\n# Question 8\n\n\n# Mutate the data frame so that it includes a new variable that contains the average speed, avg_speed \n# traveled by the plane for each flight (in mph). What is the tail number of the plane with the fastest \n# avg_speed? Hint: Average speed can be calculated as distance divided by number of hours of travel, and \n# note that air_time is given in minutes. If you just want to show the avg_speed and tailnum and none of \n# the other variables, use the select function at the end of your pipe to select just these two variables \n# with select(avg_speed, tailnum). You can Google this tail number to find out more about the aircraft.\n\nnycflights <- nycflights %>%\n  mutate(avg_speed = distance / air_time * 60) \n\nnycflights %>%\n  filter(avg_speed == max(avg_speed)) %>% \n  select(tailnum, avg_speed)\n\n# Answer: A - N666DN\n\n\n# ==================================================================================================\n# Question 9\n# ggplot(nycflights, aes(x = avg_speed, y = distance)) +\n#   geom_point() + geom_smooth()\n\n\n\nggplot(nycflights, aes(x = distance, y = avg_speed)) +\n  geom_point() + geom_smooth()\n\n# Answer: C - There is an overall postive association between distance and average speed.\n\n\n# ==================================================================================================\n# Question 10\n\n# Then, determine the on time arrival percentage based on whether the flight departed on time or not. \n# What proportion of flights that were \"delayed\" departing arrive \"on time\"? \n\nnycflights <- nycflights %>%\n  mutate(ot = ifelse(dep_type == \"delayed\" & arr_type == \"on time\", \"on time\", \"delayed\"))\n\nprop <- sum(nycflights$dep_type == \"delayed\") / sum(nycflights$ot == \"on time\")\nprop <- prop / 100\n\n# Answer - 0.05857951\n\n\nnycflights$ot <- as.factor(nycflights$ot)\nproportion <- as.array(table(nycflights$ot))\nprop.table(proportion)\n\n\n\n\n",
    "created" : 1462808413400.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "344584409",
    "id" : "C367B959",
    "lastKnownWriteTime" : 1462906918,
    "last_content_update" : 1462906918331,
    "path" : "C:/Users/bruno/OneDrive/Dokumente/Coursera_Courses/Statistics - Duke University/001_Introduction_to_Probability_and_Data/Week 2/Lab/LabQuiz2_R/LabQuiz.R",
    "project_path" : "LabQuiz.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}