load(file = 'Data/brfss2013.RData')
data <- brfss2013
load(file = 'Data/brfss2013.RData')
data <- brfss2013
# evaluate the size of the data set
dim(data)
str(data)
# remove not required columns
Col <- c('X_state', 'sex', 'genhlth', 'hlthpln1', 'income2', 'educa', 'fruit1', 'vegetab1', 'weight2', 'height3', 'exerany2')
data.req <- data[, Col]
View(data.req)
str(data$height3)
summary(data$height3)
hist(data$height3)
library('dplyr')
library('ggplot2')
library('plyr')
a <- which(data$height3 > 8000)
dim(a)
sum(a)
length(a)
b <- which(data$height3 < 100)
c <- which(data$height3 < 100 & data$height3 > 8000)
length(c)
c <- which((data$height3 < 100) & (data$height3 > 8000))
c <- which((data$height3 < 100) && (data$height3 > 8000))
c <- which((data$height3 < 100) & (data$height3 > 8000))
b <- which(data$height3 < 100)
length(b)
c <- which((data$height3 < 100))
c <- which((data$height3 < 100) & (data$height3 > 8000))
c <- which((data$height3 < 100) | (data$height3 > 8000))
length(c)
dim(data.req2)
dim(data.rsq2)
Col <- c('X_state', 'sex', 'genhlth', 'weight2', 'height3', 'exerany2')
data.rsq2 <- data[, Col]
dim(data.rsq2)
data.rsq2 <- data.rsq2[ which((data.rsq2$height3 < 100) | (data.rsq2$height3 > 8000)), ]
dim(data.rsq2)
Col <- c('X_state', 'sex', 'genhlth', 'weight2', 'height3', 'exerany2')
data.rsq2 <- data[, Col]
# based on variable values
data.rsq2 <- data.rsq2[ !which((data.rsq2$height3 < 100) | (data.rsq2$height3 > 8000)), ]
dim(data.rsq2)
ol <- c('X_state', 'sex', 'genhlth', 'weight2', 'height3', 'exerany2')
data.rsq2 <- data[, Col]
c <- !(which((data.rsq2$height3 < 100) | (data.rsq2$height3 > 8000)))
length(c)
c <- data.rsq2[(which((data.rsq2$height3 < 100) | (data.rsq2$height3 > 8000))), ]
c <- data.rsq2[(which(!(data.rsq2$height3 < 100) | !(data.rsq2$height3 > 8000))), ]
length(c)
ldim(c)
dim(c)
t <- which((data.rsq2$height3 > 100) & (data.rsq2$height3 < 8000))
dim(data.rsq2)
a <- which((data.rsq2$height3 < 100) | (data.rsq2$height3 > 8000))
length(a)
b <- which((data.rsq2$height3 > 100) & (data.rsq2$height3 < 8000))
length(b)
length(data.rsq2 %>%
filter((height3 > 100) & height3 < 8000)))
length(data.rsq2 %>% filter((height3 > 100) & (height3 < 8000)))
dim(data.rsq2 %>% filter((height3 > 100) & (height3 < 8000)))
dim(data.rsq2 %>% filter((height3 > 100) & (height3 < 8000)))
data.rsq2 <- data.rsq2 %>% filter((height3 > 100) & (height3 < 8000))
hist(data.rsq2$height3)
?hist
hist(data.rsq2$height3, breaks=50)
dim(data.rsq2 %>% filter((height3 > 100) & (height3 < 7500)))
which(data.rsq2  = 7777)
which(data.rsq2$height3  = 7777)
which(data.rsq2$height3  == 7777)
which(data.rsq2  > 7777)
which(data.rsq2$height3  > 7777)
q <- which(data.rsq2$height3  > 7777)
Col <- c('X_state', 'sex', 'genhlth', 'weight2', 'height3', 'exerany2')
data.rsq2 <- data[, Col]
q <- which(data.rsq2$height3  > 7777)
q <- which(data.rsq2$height3  > 7500)
summary(data$height3)
summary(data.rsq3$height3)
summary(data.rsq2$height3)
Col <- c('X_state', 'sex', 'genhlth', 'weight2', 'height3', 'exerany2')
data.rsq2 <- data[, Col]
# remove all rows with 'NA'
data.rsq2.NoNA <- data.rsq1[complete.cases(data.rsq2),]
# remove all rows with 'NA'
data.rsq2.NoNA <- data.rsq2[complete.cases(data.rsq2),]
# based on variable values
data.rsq2 <- data.rsq2[ which((data.rsq2$height3 > 100) & (data.rsq2$height3 < 8000)), ]
summary(data.rsq3$height3)
summary(data.rsq2$height3)
summary(data.rsq2$weight2)
str(data.rsq2$weight2)
View(data.rsq2)
hist(data.rsq2$weight2)
hist(as.numeric(data.rsq2$weight2)
)
unique(data.rsq2$weight2)
test <- data.rsq2
which(data.rsq2$weight2 > 9000)
test$weight2 <- as.numeric(test$weight2)
which(data.rsq2$weight2 > 9000)
which(test$weight2 > 9000)
test$weight2
View(test)
w <- which(test$weight2 > 9000)
w <- which(data.rsq2$weight2 > 9000)
test$weight2 <- as.integer(test$weight2)
w <- which(data.rsq2$weight2 > 9000)
w <- which(test$weight2 > 9000)
test$weight2 > 9000
Col <- c('X_state', 'sex', 'genhlth', 'weight2', 'height3', 'exerany2')
data.rsq2 <- data[, Col]
# remove all rows with 'NA'
data.rsq2.NoNA <- data.rsq2[complete.cases(data.rsq2),]
test <- data.rsq2
c <- data.rsq2[ which((data.rsq2$height3 > 8000)), ]
test2$height2 <- lapply(test2$height2, function(x) if(x > 9000) { (x - 9000) * 3.2808 })
test2$height2 <- lapply(test$height2, function(x) if(x > 9000) { (x - 9000) * 3.2808 })
test$height2 <- lapply(test$height2, function(x) if(x > 9000) { (x - 9000) * 3.2808 })
t <- function(x) if(x > 9000) { (x - 9000) * 3.2808 }
t(9450)
conv.height <- function(x) if(x > 9000) { (x - 9000) * 3.2808 }
conv.weight <- function(x) if(x > 9000) { (x - 9000) * 3.2808 }
head(data.rsq2$weight2, 100)
data.rsq2$weight2 <- as.numeric(data.rsq2$weight2)
data.rsq2$weight2 > 9000
str(data.rsq2$height2)
str(data.rsq2$weight2)
data.rsq2$weight2 <- as.factor(data.rsq2$weight2)
data.rsq2$weight2 <- as.numeric(data.rsq2$weight2)
summary(data.rsq2$weight2)
which(data.rsq2$weight2 == 7777)
which(data.rsq2$weight2 > 8000 )
which(data.rsq2height3 > 8000 )
which(data.rsq2height2 > 8000 )
which(data.rsq2$height3 > 8000 )
h8 <- which(data.rsq2$height3 > 8000 )
Col <- c('X_state', 'sex', 'genhlth', 'weight2', 'height3', 'exerany2')
data.rsq2 <- data[, Col]
# load the data set
load(file = 'Data/brfss2013.RData')
data <- brfss2013
# remove not required columns
Col <- c('X_state', 'sex', 'genhlth', 'hlthpln1', 'income2', 'educa', 'fruit1', 'vegetab1', 'weight2', 'height3', 'exerany2')
data.req <- data[, Col]
Col <- c('X_state', 'sex', 'genhlth', 'weight2', 'height3', 'exerany2')
data.rsq2 <- data[, Col]
unique(data$height3)
conv.height <- function(x) if(x > 9000) { (x - 9000) * 3.2808 }
conv.weight <- function(x) if(x > 9000) { (x - 9000) * 2.2046 }
conv.height <- function(x) if(x > 9000) { (x - 9000) * 0.3937 }
conv.height(9115)
9115 - 9000
115 * 0.3937
conv.height <- function(x) if(x > 9000) { (x - 9000) * 0.3937 * 0.083333 }
conv.height(9115)
conv.ft.m <- function(x) ifelse(x > 9000,(x - 9000) / 100 ,(x / 100) * 0,3048)
conv.ft.m(550)
conv.ft.m <- function(x) ifelse(x > 9000,((x - 9000) / 100) ,((x / 100) * 0,3048))
conv.ft.m <- function(x) ifelse(x > 9000, ((x - 9000) / 100), ((x / 100) * 0.3048))
conv.ft.m(550)
conv.ft.m(9115)
test$weight2 <- lapply(test$weight2, function(x) ifelse(test$weight2 == '', 'NA', test$weight2))
test <- data.rsq2
test$weight2 <- lapply(test$weight2, function(x) ifelse(test$weight2 == '', 'NA', test$weight2))
head(test)
a <- head(test, 100)
a$weight2 <- lapply(a$weight2, function(x) ifelse(a$weight2 == '', 'NA', a$weight2))
View(a)
a <- head(test, 100)
a
test <- test %>% mutate(weight2 = ifelse(weight2 %in% c("", "9999"), "NA", weight2))
test <- test %>% mutate(weight2 = ifelse(weight2 %in% c(" ", "9999"), "NA", weight2))
test <- test %>% mutate(weight2 = ifelse(weight2 %in% c("", "9999"), "NA", weight2))
View(test)
Col <- c('X_state', 'sex', 'genhlth', 'weight2', 'height3', 'exerany2')
data.rsq2 <- data[, Col]
# calc BMI /  Excercise
# summary(data$weight2)
# summary(data$height3)
# summary(data$exerany2)
test <- data.rsq2
test <- test %>% mutate(weight2 = ifelse(weight2 %in% c("", "9999"), "NA", weight2))
View(test)
Col <- c('X_state', 'sex', 'genhlth', 'weight2', 'height3', 'exerany2')
data.rsq2 <- data[, Col]
# calc BMI /  Excercise
# summary(data$weight2)
# summary(data$height3)
# summary(data$exerany2)
test <- data.rsq2
test <- test %>% mutate(weight2 = ifelse(weightX %in% c("", "9999"), "NA", weight2))
test$weightX <- test %>% mutate(weight2 = ifelse(weight2 %in% c("", "9999"), "NA", weight2))
View(test)
Col <- c('X_state', 'sex', 'genhlth', 'weight2', 'height3', 'exerany2')
data.rsq2 <- data[, Col]
# calc BMI /  Excercise
# summary(data$weight2)
# summary(data$height3)
# summary(data$exerany2)
test <- data.rsq2
test <- test %>% mutate(weight2 = ifelse(weight2 %in% c("", "9999"), "NA", ))
test <- test %>% mutate(weight2 = if(weight2 %in% c("", "9999"), "NA"))
test <- test %>% mutate(weight2 = if(weight2 %in% c("", "9999") "NA"))
View(test)
test <- test %>% mutate(weight2 = if(weight2 %in% c("", "9999") "NA"))
test <- test %>% mutate(weight2 = if(weight2 %in% c("", "9999") 'NA'))
test <- test %>% mutate(weight2 = if(weight2 %in% c("", "9999"){ 'NA' }))
test <- test %>% mutate(weight2 = if(weight2 %in% c("", "9999"),'NA'))
?mutate
test <- mutate(test, weight2 = ifelse(weight2 %in% c("", "9999"), "NA", weight2))
View(test)
Col <- c('X_state', 'sex', 'genhlth', 'weight2', 'height3', 'exerany2')
data.rsq2 <- data[, Col]
# calc BMI /  Excercise
# summary(data$weight2)
# summary(data$height3)
# summary(data$exerany2)
test <- data.rsq2
View(test)
test <- mutate(test, weight2 = ifelse(weight2 == '', 'NA', weight2))
View(test)
library('dplyr')
library('ggplot2')
library('plyr')
library('gridExtra')
library('ggmap')
loadFunctions <- FALSE
USPopulation2016 <- 323663800
# ============================================================================================================
# Download and extract Data and load file
# ============================================================================================================
# load the data set
load(file = 'Data/brfss2013.RData')
data <- brfss2013
Col <- c('X_state', 'X_bmi5', 'X_bmi5cat')
data.rsq0 <- data[, Col]
survey.population.State <- count(data.rsq0, 'X_state')
survey.population.State <- survey.population.State[-1,]
survey.population.State <- survey.population.State[-54,]
library('dplyr')
library('ggplot2')
library('plyr')
library('gridExtra')
library('ggmap')
loadFunctions <- FALSE
USPopulation2016 <- 323663800
# ============================================================================================================
# Download and extract Data and load file
# ============================================================================================================
# load the data set
load(file = 'Data/brfss2013.RData')
data <- brfss2013
Col <- c('X_state', 'X_bmi5', 'X_bmi5cat')
data.rsq0 <- data[, Col]
survey.population.State <- count(data.rsq0, 'X_state')
survey.population.State <- survey.population.State[-1,]
survey.population.State <- survey.population.State[-54,]
View(survey.population.State)
filterObese <- data.rsq0 %>% filter(X_bmi5cat == 'Obese') %>% group_by(X_state)
obese.population.State <- count(filterObese, 'X_state')
View(survey.population.State)
knitr2html('intro_data_prob_project.Rmd')
knit2html('intro_data_prob_project.Rmd')
library('knitr')
knit2html('intro_data_prob_project.Rmd')
render('intro_data_prob_project.Rmd')
render_html('intro_data_prob_project.Rmd')
# ============================================================================================================
# Download and extract Data and load file
# ============================================================================================================
# load the data set
load(file = 'Data/brfss2013.RData')
USPopulation2016 <- 323663800
# evaluate the size of the data set
dim(brfss2013)
# str(brfss2013)
# summary(brfss2013)
# ============================================================================================================
# Create Data subsets for each research question by providing only the required columns
# ============================================================================================================
# Data set for research question 1
Col <- c('X_state', 'X_bmi5', 'X_bmi5cat')
data.rsq1 <- brfss2013[, Col]
# Data set for research question 2
Col <- c('X_state', 'sex', 'genhlth', 'hlthpln1', 'income2', 'X_incomg', 'educa', 'X_educag', 'X_frutsum', 'X_vegesum', 'X_bmi5', 'X_bmi5cat', 'exerany2')
data.rsq2 <- brfss2013[, Col]
# Data set for research question 3
Col <- c('X_bmi5', 'X_age80')
data.rsq3 <- brfss2013[, Col]
# Data set for research question 4
Col <- c('X_bmi5', 'X_frtlt1', 'X_frutsum', 'X_veglt1', 'X_vegesum', 'X_age80')
data.rsq4 <- brfss2013[, Col]
# Data set for research question 5
Col <- c('pa1min_', 'X_age80')
data.rsq5 <- brfss2013[, Col]
USPopulation2016 <- 323663800
# evaluate the size of the data set
dim(brfss2013)
# str(brfss2013)
# summary(brfss2013)
# ============================================================================================================
# Create Data subsets for each research question by providing only the required columns
# ============================================================================================================
# Data set for research question 1
Col <- c('X_state', 'X_bmi5', 'X_bmi5cat')
data.rsq1 <- brfss2013[, Col]
# Data set for research question 2
Col <- c('X_state', 'genhlth', 'hlthpln1', 'X_bmi5cat', 'exerany2')
data.rsq2 <- brfss2013[, Col]
# Data set for research question 3
Col <- c('X_bmi5', 'X_age80')
data.rsq3 <- brfss2013[, Col]
# Data set for research question 4
Col <- c('X_bmi5', 'X_frtlt1', 'X_frutsum', 'X_veglt1', 'X_vegesum', 'X_age80')
data.rsq4 <- brfss2013[, Col]
# Data set for research question 5
Col <- c('pa1min_', 'X_age80')
data.rsq5 <- brfss2013[, Col]
# ====================================================================================================
# Data preprocessing
# ====================================================================================================
# remove rows with missing data
data.rsq1 <- data.rsq1[complete.cases(data.rsq1),]
# calculate sample size per state
survey.population.State <- plyr::count(data.rsq1, 'X_state')
colnames(survey.population.State) <- c('X_state', 'Sample')
# filter for people being Obese
# filter.Obese <- data.rsq1 %>% filter(X_bmi5cat == 'Obese')
filter.Obese <- subset(data.rsq1, data.rsq1$X_bmi5cat == 'Obese')
# calculate sample size of Obese people per state
obese.population.State <- plyr::count(filter.Obese, 'X_state')
colnames(obese.population.State) <- c('X_state', 'Obese')
# merge data sets and calc percentage
survey.population.State <- merge(survey.population.State, obese.population.State)
survey.population.State$Percent <- with(survey.population.State, round(Obese * 100 / Sample, 2))
# ====================================================================================================
# Data preprocessing
# ====================================================================================================
# load map data
statesMap <- map_data("state")
str(statesMap)
# merge the obesity with map data
colnames(survey.population.State) <- c('region', 'sample', 'obese', 'percent')
survey.population.State$region <- tolower(survey.population.State$region)
surveyMap <- merge(statesMap, survey.population.State, by = "region")
str(surveyMap)
# ====================================================================================================
# Create Plots
# ====================================================================================================
# plot the US map and assign the heatmap
ggplot() +
geom_polygon(data = surveyMap, aes(x = long, y = lat, group = group, fill = percent), colour = "white") +
scale_fill_continuous(low = "thistle2", high = "darkred", guide = "colorbar") +
theme_bw() + labs(fill = "[%]", title = "Distribution of Obesity Rate in the US in 2013", x = "", y = "") +
scale_y_continuous(breaks = c()) + scale_x_continuous(breaks = c()) + theme(panel.border = element_blank())
# order dataset descending and filter top 20 rows
survey.population.State.ordered <- survey.population.State[order( - survey.population.State$percent),]
survey.population.State.ordered$sample <- NULL
survey.population.State.ordered$obese <- NULL
survey.population.State.ordered <- filter(survey.population.State.ordered, percent > 1) %>% top_n(20)
ggplot(data = survey.population.State.ordered, aes(x = reorder(survey.population.State.ordered$region, - survey.population.State.ordered$percent), y = survey.population.State.ordered$percent,
fill = percent, alpha = 0.8)) +
geom_bar(stat = "identity") +
xlab("State") + ylab("% of population Obese") +
ggtitle("Top 20 States with highest obesity rate in 2013") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_text(aes(label = percent), vjust = 1.6, color = "black", position = position_dodge(0.9), size = 3)
library('ggplot2')   # library to create plots
library('plyr')      # data manipulation
library('dplyr')     # data manipulation
library('ggmap')     # visualize maps
library('knitr')     # required to apply knitr options
# appl< general knitr options
knitr::opts_chunk$set(comment=NA, fig.align='center')
# ====================================================================================================
# Data preprocessing
# ====================================================================================================
# load map data
statesMap <- map_data("state")
str(statesMap)
# merge the obesity with map data
colnames(survey.population.State) <- c('region', 'sample', 'obese', 'percent')
survey.population.State$region <- tolower(survey.population.State$region)
surveyMap <- merge(statesMap, survey.population.State, by = "region")
str(surveyMap)
# ====================================================================================================
# Create Plots
# ====================================================================================================
# plot the US map and assign the heatmap
ggplot() +
geom_polygon(data = surveyMap, aes(x = long, y = lat, group = group, fill = percent), colour = "white") +
scale_fill_continuous(low = "thistle2", high = "darkred", guide = "colorbar") +
theme_bw() + labs(fill = "[%]", title = "Distribution of Obesity Rate in the US in 2013", x = "", y = "") +
scale_y_continuous(breaks = c()) + scale_x_continuous(breaks = c()) + theme(panel.border = element_blank())
# order dataset descending and filter top 20 rows
survey.population.State.ordered <- survey.population.State[order( - survey.population.State$percent),]
survey.population.State.ordered$sample <- NULL
survey.population.State.ordered$obese <- NULL
survey.population.State.ordered <- filter(survey.population.State.ordered, percent > 1) %>% top_n(20)
ggplot(data = survey.population.State.ordered, aes(x = reorder(survey.population.State.ordered$region, - survey.population.State.ordered$percent), y = survey.population.State.ordered$percent,
fill = percent, alpha = 0.8)) +
geom_bar(stat = "identity") +
xlab("State") + ylab("% of population Obese") +
ggtitle("Top 20 States with highest obesity rate in 2013") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_text(aes(label = percent), vjust = 1.6, color = "black", position = position_dodge(0.9), size = 3)
View(data.rsq2)
# ====================================================================================================
# Data preprocessing
# ====================================================================================================
# evaluate the percentage of the US population based on bmi Category
bmi.cat <- count(data.rsq2, 'X_bmi5cat')
bmi.cat <- bmi.cat[-5,]
bmi.cat$percent <- prop.table(bmi.cat$freq)
bmi.cat$population <- lapply(bmi.cat$percent, function(x) {
USPopulation2013 * x
})
ggplot(bmi.cat, aes(x = factor(X_bmi5cat), y = percent, fill = percent, alpha = 0.8)) +
geom_bar(stat = 'identity') +
xlab('BMI Category') + ylab('Percentage of US Population') +
ggtitle('Distribution of US Population (BMI Category)') +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_text(aes(label = X_bmi5cat), vjust = 1.6, color = 'black', position = position_dodge(0.9), size = 3)
View(data.rsq2)
# remove rows with missing data
data.rsq2 <- data.rsq2[complete.cases(data.rsq2),]
# evaluate the percentage of the US population based on bmi Category
bmi.cat <- count(data.rsq2, 'X_bmi5cat')
unique(data.rsq2$X_bmi5cat)
table(data.rsq2$X_bmi5cat)
tt <- table(data.rsq2$X_bmi5cat)
count(data.rsq2$X_bmi5cat)
count(data.rsq2, 'X_bmi5cat)
count(data.rsq2, 'X_bmi5cat')
str(data.rsq2)
ds <- ddply(data.rsq2, .(X_bmi5cat), summarise, count = table(X_bmi5cat))
bmi.cat <- playr::count(data.rsq2, 'X_bmi5cat')
bmi.cat <- plyr::count(data.rsq2, 'X_bmi5cat')
View(bmi.cat)
bmi.cat <- plyr::count(data.rsq2, 'X_bmi5cat')
bmi.cat <- bmi.cat[-5,]
bmi.cat$percent <- prop.table(bmi.cat$freq)
bmi.cat$population <- lapply(bmi.cat$percent, function(x) {
USPopulation2013 * x
})
View(bmi.cat)
USPopulation2016 <- 323663800
USPopulation2013 <- 315091138
# Q-Q plots
par(mfrow=c(1,2))
# create sample data
x <- rt(100, df=3)
# normal fit
qqnorm(x); qqline(x)
# t(3Df) fit
qqplot(rt(1000,df=3), x, main="t(3) Q-Q Plot",
ylab="Sample Quantiles")
abline(0,1)
mean(data.analysis$X_bmi5, na.rm = TRUE)
# Create a subset of the analysed data, which might be interesting for the rresearch questions
Col <- c('X_state', 'X_bmi5', 'X_bmi5cat', 'genhlth', 'hlthpln1', 'exerany2', 'X_frtlt1', 'X_veglt1', 'X_pacat1', 'exract11', 'X_age80', 'weight2', 'height3', 'income2', 'educa')
data.analysis <- brfss2013[, Col]
str(data.analysis)
# slightly right skewed
summary(data.analysis$X_bmi5)
par(mfrow = c(2, 2))
hist(data.analysis$X_bmi5, breaks = 100, col = 'steelblue')
boxplot(data.analysis$X_bmi5, main = "Boxplot")
# normal fit
qqnorm(data.analysis$X_bmi5);
qqline(data.analysis$X_bmi5)
# t(3Df) fit
qqplot(rt(1000, df = 3), data.analysis$X_bmi5, main = "t(3) Q-Q Plot",
ylab = "Sample Quantiles")
abline(0, 1)
# calculate mean and median values
bmi.mean <- mean(data.analysis$X_bmi5, na.rm = TRUE)
bmi.median <- median(data.analysis$X_bmi5, na.rm = TRUE)
```{r load-packages, message = FALSE}
library('ggplot2')    # library to create plots
library('plyr')       # data manipulation
library('dplyr')      # data manipulation
library('gridExtra')  # supports the layout functionality with ggplot
library('ggmap')      # visualize maps
library('knitr')      # required to apply knitr options
library('gtable')     # used to overlay plots in ggplot
library('grid')       # used to overlay plots in ggplot
# appl< general knitr options
knitr::opts_chunk$set(comment=NA, fig.align='center')
```
```{r load-data}
# ============================================================================================================
# Download and extract Data and load file
# ============================================================================================================
# load the data set
load(file = 'Data/brfss2013.RData')
# definitions
USPopulation2016 <- 323663800
USPopulation2013 <- 315091138
```
mean(data.analysis$X_bmi5, na.rm = TRUE)
Col <- c('X_state', 'X_bmi5', 'X_bmi5cat', 'genhlth', 'hlthpln1', 'exerany2', 'X_frtlt1', 'X_veglt1', 'X_pacat1', 'exract11', 'X_age80', 'weight2', 'height3', 'income2', 'educa')
data.analysis <- brfss2013[, Col]
calculate mean and median values
bmi.mean <- mean(data.analysis$X_bmi5, na.rm = TRUE)
bmi.median <- median(data.analysis$X_bmi5, na.rm = TRUE)
calculate mean and median values
mean(data.analysis$X_bmi5, na.rm = TRUE)
