{
    "contents" : "# ========================================================================================================\n# Description:   Energy.R - \n#\n#\n# Author:        Bruno Hunkeler\n# Date:          xx.xx.2016\n#\n# ========================================================================================================\n\n# ========================================================================================================\n# Load Libraries\n# ========================================================================================================\nlibrary(dplyr)\n\n## Set a flag to define the environment\nsource(\"Utilities/utilities.R\")\nsource(\"Energy/EnergyFeatureEngineering.R\")\n\nAzure = FALSE\n\n## Load the data\ndirName <- 'Data/Energy'\n\nif(Azure){\n  # prepare path for data load\n  fileName <- \"EnergyEfficiencyRegressiondata.csv\"\n  fileName <- file.path(dirName, fileName)\n  \n} else {\n  # prepare path for data load\n  fileName <- \"EnergyEfficiencyRegressiondata.csv\"\n  fileName <- file.path(dirName, fileName)\n  \n}\n\nenergyData <- read.csv( fileName, header = TRUE, stringsAsFactors = FALSE)\n\n# Remove dots from column names.\nnames(energyData) <- gsub(\"\\\\.\", \"\", names(energyData))\n\n# Remove columns we are not going to use.\nenergyData$CoolingLoad <- NULL\n\n# Convert some columns to factors/categorical. \ncategoryList <- c(\"OverallHeight\", \"Orientation\")\nenergyData[, categoryList] <- lapply(energyData[, categoryList], function(x) as.factor(as.character(x)))\n\n# Scale the numeric features. \nscaleList <- c(\"RelativeCompactness\", \"SurfaceArea\", \"WallArea\", \"RoofArea\", \"GlazingArea\", \"GlazingAreaDistribution\")\n\n# normalize via min-max method\nenergyData1 <- energyData\nenergyData1[, scaleList] <- lapply(energyData1[, scaleList], normalize)\n\n# normalize via scale method\nenergyData[, scaleList] <- lapply(energyData[, scaleList], function(x) as.numeric(scale(x)))\n\n# source(\"Energy/EnergyVisualize.R\")\n\n# R - Modelling Liner Regression\nmodel <- lm(HeatingLoad ~ . - Orientation \n                            - GlazingArea\n                            - GlazingAreaDistribution\n                            - RelativeCompactness\n                            - WallArea\n                            - RoofArea,\n                            data = energyData)  \n\n\nscores <- energyData\nscores$scoredlabel <- predict(model, data = energyData)\n\nenergyData <- EnergyFeatureEngineering(energyData)\n\n# R - Modelling Polynomial Regression\n\n# create additional features which are squared or cubed\ndata = mutate(data,\n              RelativeCompactnessSqred = RelativeCompactness^2,\n              SurfaceAreaSqred = SurfaceArea^2,\n              WallAreaSqred = WallArea^2,\n              RelativeCompactness3 = RelativeCompactness^3,\n              SurfaceArea3 = SurfaceArea^3,\n              WallArea3 = WallArea^3)\n\nmodel <- lm(HeatingLoad ~ . - Orientation \n            - GlazingArea\n            - GlazingAreaDistribution\n            - RelativeCompactness\n            - WallArea\n            - RoofArea,\n            data = energyData)  \n\n\nscores$scoredlabel2 <- predict(model, data = energyData)\n\nhallo <- \"ok\"\n\n\n# model()\n# summary()\n# predict()\n# plot() \n\n# Feature engineering\n# energyData$Orientation <- NULL\n# energyData$GlazingArea <- NULL\n\n\n",
    "created" : 1455382151223.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "216318661",
    "id" : "DA0DCB46",
    "lastKnownWriteTime" : 1455060180,
    "path" : "C:/Users/bruno/OneDrive/Dokumente/R/MVADataScience/Energy/Energy.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}